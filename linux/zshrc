HISTFILE=~/.zsh/.histfile
HISTSIZE=1000
SAVEHIST=1000

export BROWSER="chrome"
export EDITOR="vim"
export PATH="${PATH}:${HOME}/bin:${HOME}/.cabal/bin"


# 开启颜色
autoload -U colors && colors    
export LSCOLORS="Gxfxcxdxbxegedabagacad"

alias ls="ls --color -F"
alias ll="ls --color -lh"
alias ebuild='nocorrect ebuild'
alias gist='nocorrect gist'
alias heroku='nocorrect heroku'
alias hpodder='nocorrect hpodder'
alias man='nocorrect man'
alias mkdir='nocorrect mkdir'
alias mv='nocorrect mv'
alias mysql='nocorrect mysql'
alias sudo='nocorrect sudo'
setopt correct_all

setopt beep notify
setopt completealiases
setopt HIST_IGNORE_DUPS
bindkey -e
zstyle :compinstall filename '/home/zhouxin/.zshrc'
zstyle ':completion:*' rehash true
zstyle ':completion:*' menu select

#------------------------------------------------------------------------------------------
# 					Plugins
#------------------------------------------------------------------------------------------
source ~/.zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
source ~/.zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh
#------------------------------------------------------------------------------------------
# 					Plugins End
#------------------------------------------------------------------------------------------

## 启用忽略大小写匹配
zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=*' 'l:|=* r:|=*'

autoload -U compinit promptinit
compinit
promptinit
# prompt off
setopt prompt_subst

local _current_dir="%{$fg_bold[black]%}%3~%{$reset_color%} "
function _current_dir() {
  local _max_pwd_length="65"
  if [[ $(echo -n $PWD | wc -c) -gt ${_max_pwd_length} ]]; then
    echo "%{$fg_bold[black]%}%-2~ ... %3~%{$reset_color%}"
  else
    echo "%{$fg_bold[black]%}%~%{$reset_color%}"
  fi
}

git_prompt() {
  BRANCH=$(git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/*\(.*\)/\1/')
  if [ ! -z $BRANCH ]; then
    if [ -z "$(git status -s)" ]; then
      echo -n "*%{$fg_bold[orange]%}$BRANCH·%{$fg[green]%}✔ %{$reset_color%}"
    elif [ ! -z "$(git status -s)" ]; then
      echo -n "*%{$fg_bold[orange]%}$BRANCH·%{$fg[red]%}✘ %{$reset_color%}"
    fi
  fi
}

get_message() {
  echo "$USER@Linux"
}

#❰❙ ❱
PROMPT='%{$fg[black]%}$(get_message):%{$reset_color%}${_current_dir}$(git_prompt)
%{$fg[green]%}➤ %{$reset_color%}'

RPROMPT='%{$fg_bold[blue]%}%?%{$reset_color%}'
