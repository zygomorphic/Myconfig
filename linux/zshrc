#-----------------------------
# Source some stuff
#-----------------------------

#------------------------------
# History stuff
#------------------------------
HISTFILE=~/.zsh/.histfile
HISTSIZE=1000
SAVEHIST=1000

#------------------------------
# Variables
#------------------------------
export BROWSER="chrome"
export EDITOR="vim"
export PATH="${PATH}:${HOME}/bin:${HOME}/.cabal/bin"

#-----------------------------
# Dircolors
#-----------------------------
#LS_COLORS='rs=0:di=01;34:ln=01;36:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:su=37;41:sg=30;43:tw=30;42:ow=34;42:st=37;44:ex=01;32:';
#export LS_COLORS
# 开启颜色
autoload -U colors && colors    
export LSCOLORS="Gxfxcxdxbxegedabagacad"


#------------------------------
# Alias stuff
#------------------------------
alias ls="ls --color -F"
alias ll="ls --color -lh"

alias ebuild='nocorrect ebuild'
alias gist='nocorrect gist'
alias heroku='nocorrect heroku'
alias hpodder='nocorrect hpodder'
alias man='nocorrect man'
alias mkdir='nocorrect mkdir'
alias mv='nocorrect mv'
alias mysql='nocorrect mysql'
alias sudo='nocorrect sudo'
setopt correct_all

#------------------------------
# Comp stuff
#------------------------------

setopt beep notify
setopt completealiases
setopt HIST_IGNORE_DUPS
bindkey -e


zstyle :compinstall filename '/home/zhouxin/.zshrc'
zstyle ':completion:*' rehash true
zstyle ':completion:*' menu select

## 启用忽略大小写匹配
zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=*' 'l:|=* r:|=*'

#------------------------------
# Prompt
#------------------------------
autoload -U compinit promptinit
compinit
promptinit
prompt adam2
setopt prompt_subst

ZSH_THEME_GIT_PROMPT_PREFIX="%{$reset_color%}%{$fg_bold[green]%}["
ZSH_THEME_GIT_PROMPT_SUFFIX="]%{$reset_color%}"
ZSH_THEME_GIT_PROMPT_DIRTY="%{$fg_bold[red]%}*%{$reset_color%}"
ZSH_THEME_GIT_PROMPT_CLEAN=""

#------------------------------
# Plugins
#------------------------------
source /home/zhouxin/.zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

#------------------------------
# Git status
#------------------------------
git_prompt() {
  BRANCH=$(git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/*\(.*\)/\1/')

  if [ ! -z $BRANCH ]; then
    echo -n "%F{yellow}$BRANCH"

    if [ ! -z "$(git status --short)" ]; then
      echo " %F{red}✗"
    fi
  fi
}


RPS1='$(git_prompt)%{$fg_bold[white]%}[%{$fg_bold[yellow]%}%?%{$fg_bold[white]%}]'


